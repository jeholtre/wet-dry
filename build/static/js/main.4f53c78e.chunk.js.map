{"version":3,"sources":["logo.svg","images/river1.jfif","images/river2.jfif","images/river3.jfif","Components/Home.js","Components/Login.js","Components/About.js","Components/DataCollection.js","Components/DataCollectionConfirmation.js","Components/PrelimDataAcq.js","Components/POI.js","routes.js","App.js","index.js"],"names":["MyCarousel","plugins","src","river1","river2","river3","Home","useState","setCurrentLatitude","setCurrentLongitude","updateCoords","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","watchPosition","console","log","className","type","onClick","window","location","href","Login","About","Header","size","Divider","hidden","DataCollection","currentLatitude","currentLongitude","recording","setRecording","isWet","setIsWet","ripplePool","setRipplePool","alert","Confirmation","Container","Input","placeholder","Table","celled","Row","HeaderCell","Body","Cell","PrelimDataAcq","htmlFor","id","name","value","POI","as","textAlign","paddingTop","Content","Icon","Segment","icon","Inline","Button","color","Form","Grid","columns","relaxed","Column","TextArea","label","minHeight","vertical","Main","basename","exact","path","component","DataCollectionConfirmation","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f53c78e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/river1.51056941.jfif\";","export default __webpack_public_path__ + \"static/media/river2.22cc8ec7.jfif\";","export default __webpack_public_path__ + \"static/media/river3.1e590b80.jfif\";","import React, {useEffect, useState} from 'react';\r\nimport { Button, Image, Reveal } from 'semantic-ui-react';\r\nimport Main from \"../routes\";\r\nimport '../App.css';\r\nimport logo from '../logo.svg';\r\nimport Carousel from '@brainhubeu/react-carousel';\r\nimport '@brainhubeu/react-carousel/lib/style.css';\r\nimport river1 from \"../images/river1.jfif\";\r\nimport river2 from \"../images/river2.jfif\";\r\nimport river3 from \"../images/river3.jfif\";\r\n\r\nexport const MyCarousel = () => (\r\n    <Carousel plugins={['arrows']}>\r\n        <img src={river1} />\r\n        <img src={river2} />\r\n        <img src={river3} />\r\n    </Carousel>\r\n);\r\n\r\n\r\nfunction Home() {\r\n    const [currentLatitude, setCurrentLatitude] = useState();\r\n    const [currentLongitude, setCurrentLongitude] = useState();\r\n    const [updateCoords, setUpdateCoords] = useState(false);\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            setCurrentLatitude(position.coords.latitude);\r\n            setCurrentLongitude(position.coords.longitude);\r\n        })\r\n    }, [updateCoords]);\r\n\r\n    navigator.geolocation.watchPosition(function(position) {\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n    });\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <p>\r\n                    Welcome to Wet-Dry Mapping!\r\n                </p>\r\n                <MyCarousel/>\r\n\r\n                <p>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/DataCollection\"}}>\r\n                        Data Collection\r\n                    </button>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/About\"}}>\r\n                        About\r\n                    </button>\r\n                </p>\r\n                <p>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/PrelimDataAcq\"}}>\r\n                        Preliminary Data Aqc. Page\r\n                    </button>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/DataCollectionConfirmation\"}}>\r\n                        DataCollectionConfirmation Page\r\n                    </button>\r\n                </p>\r\n                <p>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/POI\"}}>\r\n                        POI Page\r\n                    </button>\r\n                </p>\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import React from 'react';\r\nfunction Login()\r\n{\r\n    return (\r\n        <div className={'Login'}>\r\n            <p>this is the login page</p>\r\n        </div>\r\n    );\r\n};\r\nexport default Login;","import React from 'react';\r\nimport { Header, Divider } from 'semantic-ui-react';\r\nimport '../App.css';\r\nfunction About()\r\n{\r\n    return (\r\n        <div className={'About'}>\r\n            <div className={'App-header'}>\r\n            <Header size={'large'} >About Page</Header>\r\n                <p>this is the about page</p>\r\n            <Divider hidden />\r\n            <Header size={'large'}>Project Description</Header>\r\n                <p>Wet-Dry-Mapping is an app designed to help with the data collection process\r\n                    associated with mapping streams. This product allows you to take GPS data points\r\n                    while walking. During the data collection process you can say whether the stream\r\n                    is Wet - Neither - Dry and if it is Wet then whether it is a Pool (Slow moving or no movement)\r\n                    or Riffle (Fast moving)\r\n                </p>\r\n\r\n            <Divider hidden />\r\n            <Header size={'large'}>Frequently Asked Questions</Header>\r\n                <p>FAQ:</p>\r\n                <p>Q1:\" Temp \"</p>\r\n                <p>A1:\" Temp \"</p>\r\n\r\n            <Divider hidden />\r\n            <Header size={'large'}>Credits</Header>\r\n                <p>Streamers App Development Team:</p>\r\n                <p>Product Owner: Zong Deng</p>\r\n                <p>Project Technical Lead: Emma Ryden</p>\r\n                <p>Product Technicians: Jason Holtry, Luke Johnston, Mike Boisvert</p>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default About;","import React, {useEffect, useState} from 'react';\r\nimport '../App.css';\r\nimport {MyCarousel} from \"./Home\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nfunction DataCollection() {\r\n    const [currentLatitude, setCurrentLatitude] = useState();\r\n    const [currentLongitude, setCurrentLongitude] = useState();\r\n    const [updateCoords, setUpdateCoords] = useState(false);\r\n    const [recording, setRecording] = useState(false);\r\n    const [isWet, setIsWet] = useState(null);\r\n    const [ripplePool, setRipplePool] = useState(null);\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            setCurrentLatitude(position.coords.latitude);\r\n            setCurrentLongitude(position.coords.longitude);\r\n        })\r\n    }, [updateCoords]);\r\n\r\n    navigator.geolocation.watchPosition(function(position) {\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n    });\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <div>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {\r\n                        if(isWet == null || ripplePool == null) {\r\n                            window.alert(\"Please input initial wet/dry and ripple/pool values\");\r\n                        } else {\r\n                            setRecording(!recording);\r\n                        }\r\n                    }}>\r\n                        {recording ? \"Stop\" : \"Record\"}\r\n                    </button>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={()=> {\r\n                        window.alert(\"Are you sure you want to stop recording?\");\r\n                    }}>\r\n                        Finish Recording\r\n                    </button>\r\n                </div>\r\n                <MyCarousel/>\r\n\r\n                <div className=\"ui buttons\">\r\n                    <button onClick={() => {\r\n                        setRipplePool(0);\r\n                    }} className={`ui button ${ripplePool == 0 ? \"active\" : \"\"}`}>Ripple</button>\r\n                    <button onClick={() => {\r\n                        setRipplePool(1);\r\n                    }} className={`ui button ${ripplePool == 1 ? \"active\" : \"\"}`}>Neither</button>\r\n                    <button onClick={() => {\r\n                        setRipplePool(2);\r\n                    }} className={`ui button ${ripplePool == 2 ? \"active\" : \"\"}`}>Pool</button>\r\n                </div>\r\n                <div>\r\n                    <div className=\"ui buttons\">\r\n                        <button onClick={() => {\r\n                            setIsWet(0);\r\n                        }} className={`ui button ${isWet == 0 ? \"active\" : \"\"}`}>Wet</button>\r\n                        <button onClick={() => {\r\n                            setIsWet(1);\r\n                        }} className={`ui button ${isWet == 1 ? \"active\" : \"\"}`}>Dry</button>\r\n                    </div>\r\n                </div>\r\n                <p>Current Location: {currentLatitude}, {currentLongitude}</p>\r\n                <p>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"/#/POI\"}}>\r\n                        Add POI\r\n                    </button>\r\n                </p>\r\n\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\nexport default DataCollection;","import React from 'react';\r\nimport { Container, Input, Table } from 'semantic-ui-react';\r\n\r\nfunction Confirmation()\r\n{\r\n    return (\r\n        <div className={'Confirmation'}>\r\n            <header className={\"App-header\"}>\r\n                <Container>\r\n                    <h1 size=\"huge\"><strong><u> Stream Data Confirmation </u></strong></h1>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <p>\r\n                        <strong>Stream:    </strong>\r\n                        <Input size=\"mini\" placeholder='Stream Name'/>\r\n                    </p>\r\n                    <p>\r\n                        <strong>Stream Section:    </strong>\r\n                        <Input size=\"mini\" placeholder='Stream Section' />\r\n                    </p>\r\n                    <p>\r\n                        <strong>Class/Section ID:   </strong>\r\n                        <Input size=\"mini\" placeholder='ID' />\r\n                    </p>\r\n                </Container>\r\n                <br></br>\r\n                <Table celled>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Just messing</Table.HeaderCell>\r\n                            <Table.HeaderCell>with tables,</Table.HeaderCell>\r\n                            <Table.HeaderCell>don't mind this</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                        <Table.Row>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                            <Table.Cell>Cell</Table.Cell>\r\n                        </Table.Row>\r\n                    </Table.Body>\r\n                </Table>\r\n                <p>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry#/\"}}>\r\n                        Back\r\n                    </button>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/About\"}}>\r\n                        Confirm\r\n                    </button>\r\n                </p>\r\n            </header>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default Confirmation;","import React from 'react';\r\nimport '../App.css';\r\n// need to add corresponding button in Home.js then edit routes as well\r\n// inputs down work\r\nfunction PrelimDataAcq()\r\n{\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <p>Preliminary Data Acquisition</p>\r\n                <form>\r\n                    <label htmlFor=\"name\">Name of Person:</label>\r\n                    <input type=\"text\" id=\"name\" name=\"name\" value=\"Jo Doe\"/><br/>\r\n                    <label htmlFor=\"stream\">Stream:</label>\r\n                    <input type=\"text\" id=\"stream\" name=\"stream\" value=\"stream name\"/><br/>\r\n                    <label htmlFor=\"sSection\">Stream Section:</label>\r\n                    <input type=\"text\" id=\"sSection\" name=\"sSection\" value=\"Direction Brance\"/><br/>\r\n                    <label htmlFor=\"classID\">Class/Section ID:</label>\r\n                    <input type=\"text\" id=\"classID\" name=\"classID\" value=\"######\"/><br/>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry#/\"}}>back\r\n                    </button>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/DataCollection\"}}>Submit\r\n                    </button>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/About\"}}>\r\n                        ?\r\n                    </button>\r\n                </form>\r\n                <p>\r\n\r\n                </p>\r\n            </header>\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default PrelimDataAcq;","import React, {useEffect, useState} from 'react';\r\nimport { Button, Image, Header, Icon, Card, Placeholder, Segment, Grid, Divider, Form } from 'semantic-ui-react';\r\nimport '../App.css';\r\nimport logo from '../logo.svg';\r\n\r\nfunction POI() {\r\n\r\n    const [currentLatitude, setCurrentLatitude] = useState();\r\n    const [currentLongitude, setCurrentLongitude] = useState();\r\n    const [updateCoords, setUpdateCoords] = useState(false);\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            setCurrentLatitude(position.coords.latitude);\r\n            setCurrentLongitude(position.coords.longitude);\r\n        })\r\n    }, [updateCoords]);\r\n\r\n    navigator.geolocation.watchPosition(function(position) {\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n    });\r\n\r\n    return (\r\n        <div className=\"POI\">\r\n            <Header as='h1' textAlign='center' paddingTop=\"10px\">\r\n                <Header.Content>Point of Interest<Icon name='rss' className=\"icon\"/></Header.Content>\r\n            </Header>\r\n            <Segment placeholder className=\"placeHolder\">\r\n                <Header icon>\r\n                    <Icon name='camera retro' />\r\n                    We don't have any photos for your Point of Interest.\r\n                </Header>\r\n                <Segment.Inline>\r\n                    <Button color='green'>Add Photo</Button>\r\n                </Segment.Inline>\r\n            </Segment>\r\n            <Segment className=\"placeHolder\">\r\n                <Form>\r\n                    <Grid columns={2} relaxed='very'>\r\n                        <Grid.Column>\r\n                            <p><Header as='h5'>Location</Header>Latitude: {currentLatitude},<br></br> Longitude: {currentLongitude}</p>\r\n                            <p><Header as='h5'>Date</Header>MM/DD/YYYY</p>\r\n                            <p><Header as='h5'>Stream Name</Header>Stream Name</p>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <Form.TextArea label=\"Description\" minHeight={100}></Form.TextArea>\r\n                            <Form.Button>Submit</Form.Button>\r\n                        </Grid.Column>\r\n                        <Divider vertical className=\"relative\"></Divider>\r\n                    </Grid>\r\n                </Form>\r\n            </Segment>\r\n{/*             <Card className=\"placeHolder\">\r\n                <Card.Content>\r\n                    <Placeholder>\r\n                    <Placeholder.Image rectangular />\r\n                    </Placeholder>\r\n                </Card.Content>\r\n            </Card> */}\r\n        </div>\r\n    );\r\n};\r\nexport default POI;","import React from 'react';\r\nimport {HashRouter, Switch, Route} from 'react-router-dom';\r\n\r\nimport Home from './Components/Home';\r\nimport Login from './Components/Login';\r\nimport About from './Components/About';\r\nimport DataCollection from './Components/DataCollection';\r\nimport DataCollectionConfirmation from './Components/DataCollectionConfirmation';\r\nimport PrelimDataAcq from './Components/PrelimDataAcq';\r\nimport POI from './Components/POI';\r\n\r\nconst Main = () => {\r\n    return (\r\n    <HashRouter basename={\"/wet-dry/\"}>\r\n        <Switch>\r\n            <Route exact path='/' component={Home}/>\r\n            <Route path='/Login' component={Login}/>\r\n            <Route path='/About' component={About}/>\r\n            {/*<Route path='/POI' component={POI}/>*/}\r\n            <Route path='/DataCollection' component={DataCollection}/>\r\n            <Route path='/DataCollectionConfirmation' component={DataCollectionConfirmation}/>\r\n            <Route path='/PrelimDataAcq' component={PrelimDataAcq}/>\r\n            <Route path='/POI' component={POI}/>\r\n        </Switch>\r\n    </HashRouter>\r\n    );\r\n};\r\n\r\nexport default Main;","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Main from \"./routes\";\r\nimport React from \"react\";\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport Home from \"./Components/Home\";\r\nimport Login from \"./Components/Login\";\r\nimport About from \"./Components/About\";\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n          <Main />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom/esm/react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n          <App />\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}