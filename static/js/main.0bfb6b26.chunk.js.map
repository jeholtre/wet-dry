{"version":3,"sources":["logo.svg","images/river1.jfif","images/river2.jfif","images/river3.jfif","Components/Home.js","Components/Login.js","Components/About.js","Components/LiveLocation.js","Components/DataCollection.js","Components/DataCollectionConfirmation.js","Components/PrelimDataAcq.js","Components/POI.js","routes.js","App.js","index.js"],"names":["MyCarousel","plugins","src","river1","river2","river3","Home","useState","setCurrentLatitude","setCurrentLongitude","updateCoords","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","watchPosition","console","log","className","type","onClick","window","location","href","Login","About","React","open","setOpen","Header","size","color","Divider","hidden","Segment","placeholder","bH","Button","Modal","onClose","onOpen","trigger","Content","image","Description","Actions","LiveLocation","usePosition","speed","timestamp","accuracy","error","DataCollection","currentLatitude","currentLongitude","trail","setTrail","recording","setRecording","isWet","setIsWet","ripplePool","setRipplePool","p","as","textAlign","paddingTop","Icon","name","alert","style","height","width","bootstrapURLKeys","key","defaultCenter","lat","lng","defaultZoom","Confirmation","Date","Container","Input","PrelimDataAcq","Form","label","POI","date","icon","Inline","Grid","columns","relaxed","Column","getMonth","getDate","getFullYear","TextArea","minHeight","vertical","Main","basename","exact","path","component","DataCollectionConfirmation","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bfb6b26.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/river1.51056941.jfif\";","export default __webpack_public_path__ + \"static/media/river2.22cc8ec7.jfif\";","export default __webpack_public_path__ + \"static/media/river3.1e590b80.jfif\";","import React, {useEffect, useState} from 'react';\r\nimport { Button, Image, Reveal } from 'semantic-ui-react';\r\nimport Main from \"../routes\";\r\nimport '../App.css';\r\nimport logo from '../logo.svg';\r\nimport Carousel from '@brainhubeu/react-carousel';\r\nimport '@brainhubeu/react-carousel/lib/style.css';\r\nimport river1 from \"../images/river1.jfif\";\r\nimport river2 from \"../images/river2.jfif\";\r\nimport river3 from \"../images/river3.jfif\";\r\n\r\nexport const MyCarousel = () => (\r\n    <Carousel plugins={['arrows']}>\r\n        <img src={river1} />\r\n        <img src={river2} />\r\n        <img src={river3} />\r\n    </Carousel>\r\n);\r\n\r\n\r\nfunction Home() {\r\n    const [currentLatitude, setCurrentLatitude] = useState();\r\n    const [currentLongitude, setCurrentLongitude] = useState();\r\n    const [updateCoords, setUpdateCoords] = useState(false);\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            setCurrentLatitude(position.coords.latitude);\r\n            setCurrentLongitude(position.coords.longitude);\r\n        })\r\n    }, [updateCoords]);\r\n\r\n    navigator.geolocation.watchPosition(function(position) {\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n    });\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <p>\r\n                    Welcome to Wet-Dry Mapping!\r\n                </p>\r\n                <MyCarousel/>\r\n\r\n                <p>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/DataCollection\"}}>\r\n                        Data Collection\r\n                    </button>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/About\"}}>\r\n                        About\r\n                    </button>\r\n                </p>\r\n                <p>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/PrelimDataAcq\"}}>\r\n                        Preliminary Data Aqc. Page\r\n                    </button>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/DataCollectionConfirmation\"}}>\r\n                        DataCollectionConfirmation Page\r\n                    </button>\r\n                </p>\r\n                <p>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/POI\"}}>\r\n                        POI Page\r\n                    </button>\r\n                </p>\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import React from 'react';\r\nfunction Login()\r\n{\r\n    return (\r\n        <div className={'Login'}>\r\n            <p>this is the login page</p>\r\n        </div>\r\n    );\r\n};\r\nexport default Login;","import React from 'react';\r\nimport {Header, Divider, Segment, Button, Modal} from 'semantic-ui-react';\r\nimport '../css/About.css';\r\nfunction About() {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n            return (\r\n                <div className={\"About\"}>\r\n                    <Header size={'large'} color={'black'}>About Page</Header>\r\n                    {/*<Segment placeholder className={\"placeHolder\"}>*/}\r\n                    {/*    <p>this is the about page, Temp, can add description here or delete section</p>*/}\r\n                    {/*</Segment>*/}\r\n                    <Divider hidden/>\r\n\r\n                    <Header size={'large'} color={'black'}>Project Description</Header>\r\n                    <Segment placeholder className={\"buttonHolder\"}>\r\n                        <p>Wet-Dry-Mapping is an app designed to help with the data collection process\r\n                            associated with mapping streams. This product allows you to take GPS data points\r\n                            while walking. During the data collection process you can say whether the stream\r\n                            is Wet - Neither - Dry and if it is Wet then whether it is a Pool (Slow moving or no\r\n                            movement)\r\n                            or Riffle (Fast moving)\r\n                        </p>\r\n                    </Segment>\r\n                    <Divider hidden/>\r\n                    <Header size={'large'} color={'black'}>Frequently Asked Questions</Header>\r\n                    <Segment placeholder className={\"placeHolder\"}>\r\n                        <p>FAQ:</p>\r\n                        <p>Q1:\" Temp \"</p>\r\n                        <p>A1:\" Temp \"</p>\r\n                    </Segment>\r\n\r\n                    <Divider hidden/>\r\n                    <Header size={'large'} color={'black'}>Credits</Header>\r\n                    <Segment placeholder className={\"placeHolder\"}>\r\n                        <p>Streamers App Development Team:</p>\r\n                        <p>Product Owner: Zong Deng</p>\r\n                        <p>Project Technical Lead: Emma Ryden</p>\r\n                        <p>Product Technicians: Jason Holtry, Luke Johnston, Mike Boisvert</p>\r\n                    </Segment>\r\n                    <Segment bH className={\"buttonHolder\"}>\r\n                    <p>\r\n                        <Button color={'green'} onClick={() => {\r\n                            window.location.href = \"wet-dry#/\"\r\n                        }}>Back</Button>\r\n                        {/*<Popup*/}\r\n                        {/*    trigger={<Button color={'green'}>Help (?)</Button>}*/}\r\n                        {/*    content={'TESTING'}*/}\r\n                        {/*    on={'click'}*/}\r\n                        {/*/>*/}\r\n\r\n                        <Modal\r\n                            onClose={() => setOpen(false)}\r\n                            onOpen={() => setOpen(true)}\r\n                            open={open}\r\n                            trigger={<Button color={'green'}>Help</Button>}\r\n                        >\r\n                            <Modal.Header>Help for the About Page</Modal.Header>\r\n                            <Modal.Content image>\r\n                                <Modal.Description>\r\n                                    <p>\r\n                                        The About page offers basic information about the app and features some general FAQs\r\n                                    </p>\r\n                                    <p>If you need specific help on any page please press the help button near the bottom</p>\r\n                                </Modal.Description>\r\n                            </Modal.Content>\r\n                            <Modal.Actions>\r\n                                <Button color='green' onClick={() => setOpen(false)}>\r\n                                    Close Popup\r\n                                </Button>\r\n                            </Modal.Actions>\r\n                        </Modal>\r\n                    </p>\r\n                </Segment>\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { usePosition } from 'use-position';\r\nimport {Segment} from \"semantic-ui-react\";\r\n\r\nexport const LiveLocation = () => {\r\n    const {\r\n        latitude,\r\n        longitude,\r\n        speed,\r\n        timestamp,\r\n        accuracy,\r\n        error,\r\n    } = usePosition(true);\r\n    return (\r\n        <div>\r\n            <p>Current Location: {latitude}, {longitude}</p>\r\n        </div>\r\n\r\n    );\r\n};","import React, {useEffect, useState} from 'react';\r\nimport '../App.css';\r\nimport '../css/DataCollection.css'\r\nimport {MyCarousel} from \"./Home\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport  {Button,Header, Icon, Segment} from \"semantic-ui-react\";\r\nimport { usePosition } from 'use-position';\r\nimport {LiveLocation} from \"./LiveLocation\";\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nfunction DataCollection() {\r\n    const [currentLatitude, setCurrentLatitude] = useState();\r\n    const [currentLongitude, setCurrentLongitude] = useState();\r\n    const [trail, setTrail] = useState([]);\r\n    const [updateCoords, setUpdateCoords] = useState(false);\r\n    const [recording, setRecording] = useState(false);\r\n    const [isWet, setIsWet] = useState(null);\r\n    const [ripplePool, setRipplePool] = useState(null);\r\n\r\n\r\n    //Should update everytime position changes\r\n    navigator.geolocation.watchPosition(function(position) {\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n        setCurrentLatitude(position.coords.latitude);\r\n        setCurrentLongitude(position.coords.longitude);\r\n        let p = {latitude: position.coords.latitude, longitude: position.coords.longitude};\r\n        setTrail([...trail, p]);\r\n    });\r\n\r\n    return (\r\n        <div className=\"DataCollection\">\r\n            <Header as='h1' textAlign='center' paddingTop=\"10px\">\r\n                <Header.Content>Press Start To Begin Recording!<Icon name='location arrow' className=\"icon\"/></Header.Content>\r\n            </Header>\r\n            <Segment placeholder className=\"placeHolder\">\r\n                <Header>\r\n                    <div>\r\n                        <Button onClick={() => {\r\n                            if(isWet == null || ripplePool == null) {\r\n                                window.alert(\"Please input initial wet/dry and ripple/pool values\");\r\n                            } else {\r\n                                setRecording(!recording);\r\n                            }\r\n                        }}>\r\n                            {recording ? <Icon name=\"pause\"/> :  <Icon name=\"play\"/>}\r\n                        </Button>\r\n                        <Button  type={\"button\"} onClick={()=> {\r\n                            window.alert(\"Are you sure you want to stop recording?\");\r\n                        }}>\r\n                            <Icon name=\"stop\"/>\r\n                        </Button>\r\n                    </div>\r\n                </Header>\r\n                <div style={{ height: '50vh', width: '50wh' }}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: \"AIzaSyB9xcKvAjPfaHXB8lBW-VfchEe8twYxVrU\" }}\r\n                    defaultCenter={{lat: currentLatitude, lng: currentLongitude}}\r\n                    defaultZoom={12}\r\n                >\r\n                </GoogleMapReact>\r\n                </div>\r\n                <div>\r\n                    <div className=\"ui buttons\">\r\n                        <button onClick={() => {\r\n                            setRipplePool(0);\r\n                        }} className={`ui button ${ripplePool == 0 ? \"active\" : \"\"}`}>Ripple</button>\r\n                        <button onClick={() => {\r\n                            setRipplePool(1);\r\n                        }} className={`ui button ${ripplePool == 1 ? \"active\" : \"\"}`}>Neither</button>\r\n                        <button onClick={() => {\r\n                            setRipplePool(2);\r\n                        }} className={`ui button ${ripplePool == 2 ? \"active\" : \"\"}`}>Pool</button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"ui buttons\">\r\n                        <button onClick={() => {\r\n                            setIsWet(0);\r\n                        }} className={`ui button ${isWet == 0 ? \"active\" : \"\"}`}>Wet</button>\r\n                        <button onClick={() => {\r\n                            setIsWet(1);\r\n                        }} className={`ui button ${isWet == 1 ? \"active\" : \"\"}`}>Dry</button>\r\n                    </div>\r\n                </div>\r\n                <LiveLocation />\r\n                <p>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"/#/POI\"}}>\r\n                        Add POI\r\n                    </button>\r\n                </p>\r\n            </Segment>\r\n        </div>\r\n    );\r\n};\r\nexport default DataCollection;","import React, {useState} from 'react';\r\nimport { Container, Input } from 'semantic-ui-react';\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\n\r\nfunction Confirmation()\r\n{\r\n\r\n    const [currentLatitude, setCurrentLatitude] = useState();\r\n    const [currentLongitude, setCurrentLongitude] = useState();\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    navigator.geolocation.watchPosition(function(position) {\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n        setCurrentLatitude(position.coords.latitude);\r\n        setCurrentLongitude(position.coords.longitude);\r\n        // let p = {latitude: position.coords.latitude, longitude: position.coords.longitude};\r\n    });\r\n\r\n    return (\r\n        <div className={'POI'}>\r\n            <header className={\"POI\"}>\r\n                <Container>\r\n                    <h1 size=\"huge\"><strong><u> Stream Data Confirmation </u></strong></h1>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <p>\r\n                        <strong>Stream:    </strong>\r\n                        <Input size=\"mini\" placeholder='Stream Name'/>\r\n                    </p>\r\n                    <p>\r\n                        <strong>Stream Section:    </strong>\r\n                        <Input size=\"mini\" placeholder='Stream Section' />\r\n                    </p>\r\n                    <p>\r\n                        <strong>Class/Section ID:   </strong>\r\n                        <Input size=\"mini\" placeholder='ID' />\r\n                    </p>\r\n                    <div style={{ height: '40vh', width: '40wh' }}>\r\n                        <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: \"AIzaSyB9xcKvAjPfaHXB8lBW-VfchEe8twYxVrU\" }}\r\n                            defaultCenter={{lat: currentLatitude, lng: currentLongitude}}\r\n                            defaultZoom={12}\r\n                        >\r\n                        </GoogleMapReact>\r\n                    </div>\r\n                </Container>\r\n                <br/>\r\n                <p>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry#/\"}}>\r\n                        Back\r\n                    </button>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/About\"}}>\r\n                        Submit\r\n                    </button>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/About\"}}>\r\n                        ?\r\n                    </button>\r\n                </p>\r\n            </header>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default Confirmation;","import React from 'react';\r\nimport {Form, Grid, Header, Segment} from 'semantic-ui-react'\r\nimport '../css/PrelimDataAcq.css'\r\n// need to add corresponding button in Home.js then edit routes as well\r\n// inputs down work\r\nfunction PrelimDataAcq()\r\n{\r\n    return (\r\n        <div className=\"PrelimDataAcq\">\r\n            <Header as='h1' textAlign='center' paddingTop=\"10px\">\r\n                <Header.Content>Preliminary Data Acquisition</Header.Content>\r\n            </Header>\r\n            <Segment className = \"inputAreas\">\r\n                <Form>\r\n                    <Form.Input label = 'Name of Surveyor:' placeholder='you name here'/>\r\n                    <Form.Input label = 'Stream:' placeholder='stream name'/>\r\n                    <Form.Input label = 'Stream Section:' placeholder='direction branch'/>\r\n                    <Form.Input label = 'Class/Section ID:' placeholder='#######'/>\r\n                </Form>\r\n                <button className={\"App-button\"} type={\"button\"} onClick={() => {\r\n                    window.location.href = \"/\"}}>back {/* Funny it send to address '/#/' */}\r\n                </button>\r\n                <button className={\"App-button\"} type={\"button\"} onClick={() => {\r\n                    window.location.href = \"#/DataCollection\"}}>Submit\r\n                </button>\r\n                <button className={\"App-button\"} type={\"button\"} onClick={() => {\r\n                    window.location.href = \"#/About\"}}>\r\n                    ?\r\n                </button>\r\n            </Segment>\r\n        </div>\r\n    );\r\n};\r\nexport default PrelimDataAcq;","import React, {useEffect, useState} from 'react';\r\nimport { Button, Image, Header, Icon, Card, Placeholder, Segment, Grid, Divider, Form } from 'semantic-ui-react';\r\nimport '../css/POI.css';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nfunction POI() {\r\n\r\n    const [currentLatitude, setCurrentLatitude] = useState();\r\n    const [currentLongitude, setCurrentLongitude] = useState();\r\n    const [date, setDate] = useState(new Date());\r\n\r\n     //Should update everytime position changes\r\n     navigator.geolocation.watchPosition(function(position) {\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n        setCurrentLatitude(position.coords.latitude);\r\n        setCurrentLongitude(position.coords.longitude);\r\n        // let p = {latitude: position.coords.latitude, longitude: position.coords.longitude};\r\n    });\r\n\r\n    return (\r\n        <div className=\"POI\">\r\n            <Header as='h1' textAlign='center' paddingTop=\"10px\">\r\n                <Header.Content>Point of Interest<Icon name='rss' className=\"icon\"/></Header.Content>\r\n            </Header>\r\n            <Segment placeholder className=\"placeHolder\">\r\n                <Header icon>\r\n                    <Icon name='camera retro' />\r\n                    We don't have any photos for your Point of Interest.\r\n                </Header>\r\n                <Segment.Inline>\r\n                    <Button color='green'>Add Photo</Button>\r\n                </Segment.Inline>\r\n            </Segment>\r\n            <div className=\"placeHolder\">\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: \"AIzaSyB9xcKvAjPfaHXB8lBW-VfchEe8twYxVrU\" }}\r\n                    defaultCenter={{lat: currentLatitude, lng: currentLongitude}}\r\n                    defaultZoom={12}\r\n                >\r\n                </GoogleMapReact>\r\n            </div>\r\n            <Segment className=\"placeHolder\" style={{ height: \"auto\" }}>\r\n                <Form>\r\n                    <Grid columns={2} relaxed='very'>\r\n                        <Grid.Column>\r\n                            <p><Header as='h5'>Location</Header>Latitude: {currentLatitude},<br></br> Longitude: {currentLongitude}</p>\r\n                            <p><Header as='h5'>Date</Header>\r\n                                { (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\" + date.getFullYear() }\r\n                            </p>\r\n                            <p><Header as='h5'>Stream Name</Header>Stream Name</p>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <Form.TextArea label=\"Description\" minHeight={100}></Form.TextArea>\r\n                            <Form.Button>Submit</Form.Button>\r\n                        </Grid.Column>\r\n                        <Divider vertical className=\"relative\"></Divider>\r\n                    </Grid>\r\n                </Form>\r\n            </Segment>\r\n{/*             <Card className=\"placeHolder\">\r\n                <Card.Content>\r\n                    <Placeholder>\r\n                    <Placeholder.Image rectangular />\r\n                    </Placeholder>\r\n                </Card.Content>\r\n            </Card> */}\r\n        </div>\r\n    );\r\n};\r\nexport default POI;","import React from 'react';\r\nimport {HashRouter, Switch, Route} from 'react-router-dom';\r\n\r\nimport Home from './Components/Home';\r\nimport Login from './Components/Login';\r\nimport About from './Components/About';\r\nimport DataCollection from './Components/DataCollection';\r\nimport DataCollectionConfirmation from './Components/DataCollectionConfirmation';\r\nimport PrelimDataAcq from './Components/PrelimDataAcq';\r\nimport POI from './Components/POI';\r\n\r\nconst Main = () => {\r\n    return (\r\n    <HashRouter basename={\"/wet-dry/\"}>\r\n        <Switch>\r\n            <Route exact path='/' component={Home}/>\r\n            <Route path='/Login' component={Login}/>\r\n            <Route path='/About' component={About}/>\r\n            {/*<Route path='/POI' component={POI}/>*/}\r\n            <Route path='/DataCollection' component={DataCollection}/>\r\n            <Route path='/DataCollectionConfirmation' component={DataCollectionConfirmation}/>\r\n            <Route path='/PrelimDataAcq' component={PrelimDataAcq}/>\r\n            <Route path='/POI' component={POI}/>\r\n        </Switch>\r\n    </HashRouter>\r\n    );\r\n};\r\n\r\nexport default Main;","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Main from \"./routes\";\r\nimport React from \"react\";\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport Home from \"./Components/Home\";\r\nimport Login from \"./Components/Login\";\r\nimport About from \"./Components/About\";\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n          <Main />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom/esm/react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n          <App />\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}