{"version":3,"sources":["Components/Home.js","Components/Login.js","Components/About.js","routes.js","App.js","index.js"],"names":["Home","useState","currentLatitude","setCurrentLatitude","currentLongitude","setCurrentLongitude","updateCoords","setUpdateCoords","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","watchPosition","console","log","className","onClick","type","window","location","href","Login","About","Main","basename","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAgDeA,MA7Cf,WAAiB,IAAD,EACkCC,qBADlC,mBACLC,EADK,KACYC,EADZ,OAEoCF,qBAFpC,mBAELG,EAFK,KAEaC,EAFb,OAG4BJ,oBAAS,GAHrC,mBAGLK,EAHK,KAGSC,EAHT,KAgBZ,OAZAC,qBAAU,WACNC,UAAUC,YAAYC,oBAAmB,SAACC,GACtCT,EAAmBS,EAASC,OAAOC,UACnCT,EAAoBO,EAASC,OAAOE,gBAEzC,CAACT,IAEJG,UAAUC,YAAYM,eAAc,SAASJ,GACzCK,QAAQC,IAAI,gBAAiBN,EAASC,OAAOC,UAC7CG,QAAQC,IAAI,iBAAkBN,EAASC,OAAOE,cAI9C,qBAAKI,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,4DAGA,wBAAQC,QAAS,WACbb,GAAiBD,IADrB,4BAGA,kDAAqBJ,EAArB,KAAwCE,KACxC,8BACI,wBAAQe,UAAW,aAAcE,KAAM,SAAUD,QAAS,WAAOE,OAAOC,SAASC,KAAO,mBAAxF,mBAEA,wBAAQL,UAAW,aAAcE,KAAM,SAAUD,QAAS,WAAOE,OAAOC,SAASC,KAAO,mBAAxF,wBAIJ,8BACI,wBAAQL,UAAW,aAAcE,KAAM,SAAUD,QAAS,WAAOE,OAAOC,SAASC,KAAO,mBAAxF,mBAGA,wBAAQL,UAAW,aAAcE,KAAM,SAAUD,QAAS,WAAOE,OAAOC,SAASC,KAAO,mBAAxF,2BC/BLC,MARf,WAEI,OACI,qBAAKN,UAAW,QAAhB,SACI,0DCIGO,MARf,WAEI,OACI,qBAAKP,UAAW,QAAhB,SACI,0DCiBGQ,EAZF,WACT,OACA,cAAC,IAAD,CAAYC,SAAU,WAAtB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/B,IACjC,cAAC,IAAD,CAAO8B,KAAK,SAASC,UAAWN,IAChC,cAAC,IAAD,CAAOK,KAAK,SAASC,UAAWL,UCC7BM,MARf,WACE,OACI,qBAAKb,UAAU,MAAf,SACI,cAAC,EAAD,OCNVc,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGRC,SAASC,eAAe,W","file":"static/js/main.5974f91b.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Main from \"../routes\";\r\nimport '../App.css';\r\nfunction Home() {\r\n    const [currentLatitude, setCurrentLatitude] = useState();\r\n    const [currentLongitude, setCurrentLongitude] = useState();\r\n    const [updateCoords, setUpdateCoords] = useState(false);\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            setCurrentLatitude(position.coords.latitude);\r\n            setCurrentLongitude(position.coords.longitude);\r\n        })\r\n    }, [updateCoords]);\r\n\r\n    navigator.geolocation.watchPosition(function(position) {\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n    });\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <p>\r\n                    Welcome to Wet-Dry Mapping!\r\n                </p>\r\n                <button onClick={() => {\r\n                    setUpdateCoords(!updateCoords);\r\n                }}>Update coords!</button>\r\n                <h1>Your coords are {currentLatitude}, {currentLongitude}</h1>\r\n                <p>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/Login\"}}>Login\r\n                    </button>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/Login\"}}>\r\n                        Sign up\r\n                    </button>\r\n                </p>\r\n                <p>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/About\"}}>\r\n                        About\r\n                    </button>\r\n                    <button className={\"App-button\"} type={\"button\"} onClick={() => {window.location.href = \"wet-dry/#/About\"}}>\r\n                        Help\r\n                    </button>\r\n                </p>\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import React from 'react';\r\nfunction Login()\r\n{\r\n    return (\r\n        <div className={'Login'}>\r\n            <p>this is the login page</p>\r\n        </div>\r\n    );\r\n};\r\nexport default Login;","import React from 'react';\r\nfunction About()\r\n{\r\n    return (\r\n        <div className={'About'}>\r\n            <p>this is the about page</p>\r\n        </div>\r\n    );\r\n};\r\nexport default About;","import React from 'react';\r\nimport {HashRouter, Switch, Route} from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport Home from './Components/Home';\r\n//ADD these pages later\r\nimport Login from './Components/Login';\r\n// import SignUp from '';\r\nimport About from './Components/About';\r\n\r\nconst Main = () => {\r\n    return (\r\n    <HashRouter basename={\"/wet-dry\"}>\r\n        <Switch>\r\n            <Route exact path='/' component={Home} />\r\n            <Route path='/Login' component={Login}/>\r\n            <Route path='/About' component={About}/>\r\n        </Switch>\r\n    </HashRouter>\r\n    );\r\n};\r\n\r\nexport default Main;","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Main from \"./routes\";\r\nimport React from \"react\";\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport Home from \"./Components/Home\";\r\nimport Login from \"./Components/Login\";\r\nimport About from \"./Components/About\";\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n          <Main />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom/esm/react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n          <App />\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}